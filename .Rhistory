install.packages("RCurl")
install.packages("RCurl")
install.packages("bitops")
packrat::set_opts(external.packages = "")
install.packages("RCurl")
install.packages("devtools")
require(devtools)
devtools
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
packrat::set_opts(local.repos = c("~/R/x86_64-pc-linux-gnu-library/3.1"))
packrat::set_opts(use.cache = TRUE)
packrat::restore(prompt = FALSE)
library("dplyr", lib.loc="~/Documents/R/Branches/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
print("Hello, world! - Check me out")
install.packages("stringr")
library("stringr", lib.loc="~/Documents/R/Branches/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
library("magrittr", lib.loc="~/Documents/R/Branches/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("dplyr", lib.loc="~/Documents/R/Branches/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
library("magrittr", lib.loc="~/Documents/R/Branches/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
library("magrittr", lib.loc="~/Documents/R/Branches/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
install.packages("lubridate")
packrat::snapshot(prompt = FALSE)
packrat::snapshot(prompt = FALSE)
library("lubridate", lib.loc="~/Documents/R/Branches/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
library("magrittr", lib.loc="~/Documents/R/Branches/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
git remote add demandr sabrooks/demandr
git remote add sabrooks/demandr
git remove
git remote add origin git@github.com:jeromyanglim/foo.git
git remote add origin git@github.com:sabrooks/demandr.git
library(demandr)
library(demandr)
demandr::hello()
demandr::event.timeline(mdy_hm("2/2/2012 12:00"), mdy_hm("2/2/2011 12:00"))
library("lubridate", lib.loc="~/Documents/R/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
demandr::event.timeline(mdy_hm("2/2/2012 12:00"), mdy_hm("2/2/2011 12:00"))
library(demandr)
demandr::event.timeline(mdy_hm("2/2/2012 12:00"), mdy_hm("2/2/2011 12:00"))
library("lubridate", lib.loc="~/Documents/R/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
demandr::event.timeline(mdy_hm("2/2/2012 12:00"), mdy_hm("2/2/2011 12:00"))
library(demandr)
library("lubridate", lib.loc="~/Documents/R/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
demandr::event.timeline(mdy_hm("2/2/2012 12:00"), mdy_hm("2/2/2011 12:00"))
milestones = list(event = call %--% end,
measure.period = (call+minutes(10)) %--% end,
baseline.period = (call - hours(len.base)) %--% call)
library("dplyr", lib.loc="~/Documents/R/Branches/Empty/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
event.timeline <- function(call, end, len.base = 2){
milestones = list(event = call %--% end,
measure.period = (call+minutes(10)) %--% end,
baseline.period = (call - hours(len.base)) %--% call)
return(milestones)
}
times <- event.timeline ( mdy_hm("2/2/15 13:00") , mdy_hm("2/2/15 14:40"))
library("lubridate", lib.loc="~/Documents/R/Branches/Empty/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
e
times <- event.timeline ( mdy_hm("2/2/15 13:00") , mdy_hm("2/2/15 14:40"))
times$event
baseline <- function(df, baseline.interval){
bm <- df%>%
filter(Date.Time %within% baseline.interval)%>%
summarise(min = min(energy, na.rm = TRUE))
return(bm$min)
}
base <- demandr::baseline(EventData, times$baseline.period)
base <- baseline(EventData, times$baseline.period)
library(demandr)
base <- baseline(EventData, times$baseline.period)
library(demandr)
base <- baseline(EventData, times$baseline.period)
response <- demandr::event.max(EventData, time$measure.period)
response <- demandr::event.max(EventData, times$measure.period)
demandr::plot.event(EventData, times, base, response)
install.packages("ggplot")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/Documents/R/Branches/Empty/demandr/packrat/lib/x86_64-pc-linux-gnu/3.1.3")
demandr::plot.event(EventData, times, base, response)
example.event <- function (){
times <- event.timeline ( mdy_hm("2/2/15 13:00") , mdy_hm("2/2/15 14:40"))
base <- demandr::baseline(EventData, times$baseline.period)
response <- demandr::event.max(EventData, times$measure.period)
demandr::plot.event(EventData, times, base, response)
}
example.event()
library(demandr)
example.event()
plot.event(EventData,times, base, response)
int_start(times$event)
int_end(times$event)
times
plot.event(EventData,times, base, response)
example.event()
times$baseline.period
library(demandr)
example.event()
library(demandr)
example.event()
library(demandr)
example.event()
library(demandr)
example.event()
library(demandr)
example.event()
library(demandr)
example.event()
library(demandr)
example.event()
library(demandr)
example.event()
library(demandr)
example.event()
source('~/Documents/R/Branches/Empty/demandr/R/demandr.R')
library(demandr)
source('~/Documents/R/Branches/Empty/demandr/R/demandr.R')
library(demandr)
example.event()
paste(times$baseline.period)
source('~/Documents/R/Branches/Empty/demandr/R/demandr.R')
library(demandr)
example.event()
source('~/Documents/R/Branches/Empty/demandr/R/demandr.R')
library(demandr)
example.event()
source('~/Documents/R/Branches/Empty/demandr/R/demandr.R')
library(demandr)
example.event()
